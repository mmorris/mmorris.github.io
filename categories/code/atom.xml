<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Matt Morris]]></title>
  <link href="http://mmorris.github.io/categories/code/atom.xml" rel="self"/>
  <link href="http://mmorris.github.io/"/>
  <updated>2014-03-11T11:13:54-04:00</updated>
  <id>http://mmorris.github.io/</id>
  <author>
    <name><![CDATA[Matt Morris]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Launchctl API Part 1:bsexec]]></title>
    <link href="http://mmorris.github.io/2011/08/13/launchctl-api-part-1-bsexec/"/>
    <updated>2011-08-13T03:40:00-04:00</updated>
    <id>http://mmorris.github.io/2011/08/13/launchctl-api-part-1-bsexec</id>
    <content type="html"><![CDATA[<p>Launchd is a very useful program. You can use it to schedule programs to run, to trigger code to run when a path is modified or deleted, or to string together program dependencies.  I use launchd as part of my offsite backup system. Every evening at 2am, launchd starts a backup script that rsyncs certain directories to my bucket on Amazon S3.</p>

<p>I’ve always thought it would be nice to be able to interface with launchd in code without having to execute another process invoking launchctl.  I’ve just downloaded the code for the initial release of Lion, and I’ve been tinkering with the launchd project.  After commenting out a few headers, I’ve managed to build a static library in XCode that you can use in your own project to invoke “bsexec,” which launches a process into the same bootstrap hierarchy as a given PID.</p>

<p>You can grab the code over at <a href="https://github.com/mmorris/Launchctl-API">github</a>. I’ll be adding the other launchctl commands to the API as I have time.</p>
]]></content>
  </entry>
  
</feed>
